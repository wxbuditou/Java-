package cn.it.cast.Servlet;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.mchange.v3.filecache.FileCacheKey;

import cn.it.cast.Service.StudentService;
import cn.it.cast.Service.TeacherService;
import cn.it.cast.function.News;
import cn.it.cast.function.Video;
import cn.it.cast.teacher.Teacher;
import cn.it.cast.utils.FileType;
import cn.it.cast.utils.PageModel;
import cn.it.cast.utils.RanNum;


public class TeacherServlet extends TeacherBaseServlet {
	public String scan_news(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		//获取news对象存在pagemodel的list中，然后再传到前台
		System.out.println("scan_news...");
		int num =  Integer.parseInt(request.getParameter("num"));
		TeacherService teacherService = new TeacherService();
		PageModel pModel = teacherService.findNewsWithPage(num);
		request.setAttribute("page", pModel);
		return "/Teacher/teacher_news.jsp";
	}
	
	public String scan_video(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		//获取video对象存在pagemodel的list中
		System.out.println("scan_video...");
		int num =  Integer.parseInt(request.getParameter("num"));
		TeacherService teacherService = new TeacherService();
		PageModel pModel = teacherService.findVideoWithPage(num);
		request.setAttribute("page", pModel);
		//将pagemodel对象传到前台
		return "/Teacher/teacher_video.jsp";
	}
	
	public String scan_document(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		//获取document对象存在pagemodel的list中
		System.out.println("scan_document...");
		int num =  Integer.parseInt(request.getParameter("num"));
		TeacherService teacherService = new TeacherService();
		PageModel pModel = teacherService.findDocumentWithPage(num);
		request.setAttribute("page", pModel);
		return "/Teacher/teacher_document.jsp";
	}
    
	public String publish_news(HttpServletRequest request,HttpServletResponse response) throws SQLException, UnsupportedEncodingException {
		int character = 0;
		String path="";
		String tc = request.getParameter("topic");
		String topic = new String(tc.getBytes("ISO8859-1"),"UTF-8");
		Teacher teacher = (Teacher)request.getSession().getAttribute("teacher");
		String number = teacher.getTeacher_number();
		String ct = request.getParameter("editorValue");
		String content = new String(ct.getBytes("ISO8859-1"), "UTF-8");
		System.out.println("topic: "+ topic +" number: "+ number+ " content: "+content);
		if (content!=null) {
			TeacherService teacherService = new TeacherService();
			teacherService.publish_news(number,topic,content,character);
			path="TeacherServlet?method=scan_news&num=1";
		}else {
			//
		}
		System.out.println("publish_news  path:"+path);
		return path;
	}
	
	public String show_news(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		String news_id = request.getParameter("news_id");
		TeacherService teacherService = new TeacherService();
		News news = teacherService.show_news(news_id);//返回新闻对象
		request.setAttribute("news", news);
		return "/Teacher/teacher_show_news.jsp";
	}
	
	public String publish_video(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		Map<String, String> map = new HashMap<String,String>();
		DiskFileItemFactory factory  = new DiskFileItemFactory();
		factory.setSizeThreshold(1024*1024*200);//设置最大大小为200M
		ServletFileUpload upload = new ServletFileUpload(factory);
		upload.setHeaderEncoding("utf-8");
		try {
			List<FileItem> list = upload.parseRequest(request);
			Teacher teacher = (Teacher)request.getSession().getAttribute("teacher");
			String uploaduser = teacher.getTeacher_number();//上传教师的number
			String character = "0";//标识为教师上传
			map.put("video_uploaduser", uploaduser);
			map.put("video_character", character);
			for (FileItem item:list) {
				if (item.isFormField()) {
				//普通项，获取name和对应的内容
				String key = item.getFieldName();
				String value = item.getString("utf-8");
				System.out.println("key: "+key + "  value: "+value);
				map.put(key, value);
				}else {
					//上传项，在服务端指定目录/upload创建一个文件
					//将上传项中文件的二进制数据输出到创建好的文件中
					
					String fName = item.getName();
					//String fName = new String(fn.getBytes("gbk"),"UTF-8");
					System.out.println("上传过来时的 文件名：" + fName);
					//获取服务端upload的真实路径
					//判断文件类型，是否为video文件
					String type = FileType.Type(fName);
					System.out.println("type is "+ type);
					map.put("video_oldattachment", fName);
					if (type.equals("video")) {
						String realPath = getServletContext().getRealPath("/upload/video");
						String otherpath = request.getRequestURI();
						System.out.println("otherpath :"+ otherpath);
						String video_id = RanNum.get24UUID();//生成video的id标识
						String video_attachment = RanNum.get8UUID()+"."+FileType.fileType(fName);
						String video_savepath = "upload/video";
						map.put("video_id", video_id);	//传入视频id
						map.put("video_attachment", video_attachment);	//传入存储的tomcat的文件名称
						map.put("video_savepath", video_savepath);
						System.out.println("realpath is "+ realPath);
						//File file = new File
						File file = new File(realPath,video_attachment);
						if (!file.exists()) {
							file.createNewFile();
							System.out.println("创建文件成功。。。");
						}
						item.write(file);
					}else {
						//输出视频文件不匹配
						request.setAttribute("msg", "上传文件非视频文件");
					}
				}
			}
			TeacherService teacherService = new TeacherService();
			teacherService.publish_video(map);
			System.out.println("map :" +map);
			response.sendRedirect("TeacherServlet?method=scan_video&num=1");//转到显示video界面
		}catch (Exception e) {
			e.printStackTrace();
		}
		
		return null;
	}
	
	public String show_video(HttpServletRequest request,HttpServletResponse response) throws SQLException {
		String video_id = request.getParameter("video_id");
		System.out.println("video_id is "+video_id);
		TeacherService teacherService = new TeacherService();
		Video video = teacherService.show_video(video_id);//返回视频对象
		System.out.println(video.toString());
		request.setAttribute("video", video);
		return "/Teacher/teacher_show_video.jsp";
	}

}
